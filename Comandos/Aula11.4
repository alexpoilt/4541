Visualize e aplique o arquivo role-devops.yaml para criar uma Role e RoleBinding no Cluster:
cat 4541/aula07/auth-user-account/role-devops.yaml
kubectl apply -f 4541/aula07/auth-user-account/role-devops.yaml

Para listar e exibir detalhes da Role no namespace projeto, execute os comandos:
kubectl get role -n projeto 
kubectl describe role devops-role -n projeto

Para listar e exibir detalhes da RoleBinding no namespace projeto, execute os comandos:
kubectl get rolebinding -n projeto
kubectl describe rolebinding devops-role-binding -n projeto

Visualize e aplique configurações para criar uma CluterRole e ClusterRoleBinding no Cluster:
cat 4541/aula07/auth-user-account/cluster-role-devops.yaml
kubectl apply -f 4541/aula07/auth-user-account/cluster-role-devops.yaml

Liste e visualize a CluterRole no namespace projeto:
kubectl get clusterrole devops-cluster-role -n projeto
kubectl describe clusterrole devops-cluster-role -n projeto

Liste e visualize a CluterRoleBinfing no namespace projeto:
kubectl get clusterrolebinding cluster-volumes -n projeto
kubectl describe clusterrolebinding cluster-volumes -n projeto

Acesse a pasta 4541 e conecte via SSH na VM balancer:
cd ~/k8s/4541
vagrant ssh balancer

Atualize a lista de pacotes e instale os pacotes git elinks:
sudo apt update
sudo apt install git elinks -y

Obtenha os arquivos do curso através do seguinte comando:
git clone https://github.com/4linux/4541

Armazene em variáveis a última versão das ferramentas do Cluster e a arquitetura:
export VERSION=v1.15.6
export ARCH=amd64

Realize o download da ferramenta kubectl, utilizando as informações das variáveis:
curl -sSL https://dl.k8s.io/release/${VERSION}/bin/linux/${ARCH}/kubectl > kubectl

Instale o kubectl na pasta /usr/bin com permissão 0775, usuário e grupo do root:
sudo install -o root -g root -m 0755 ./kubectl /usr/bin/kubectl

Visualize e aplique o arquivo mysql-secret.yaml para criar um Secret ao Wordpress:
cat 4541/wordpress-deploy/mysql-secret.yaml 
kubectl apply -f 4541/wordpress-deploy/mysql-secret.yaml

Visualize e aplique o arquivo pv.yaml para criar um Volume Persistente ao Wordpress:
cat 4541/wordpress-deploy/pv.yaml 
kubectl apply -f 4541/wordpress-deploy/pv.yaml

Valide os comandos anteriores, listando os Secrets e Volumes Persistentes:
kubectl get secrets
kubectl get pv

Visualize e aplique o arquivo pvc.yaml para criar Volume Persistente Claim ao Wordpress:
cat 4541/wordpress-deploy/pvc.yaml 
kubectl apply -f 4541/wordpress-deploy/pvc.yaml

Visualize e aplique o arquivo mysql-deployment.yaml para criar um Deploy do MySQL:
cat 4541/wordpress-deploy/mysql-deployment.yaml 
kubectl apply -f 4541/wordpress-deploy/mysql-deployment.yaml

Visualize e aplique o arquivo wordpress-deployment.yaml para criar um Deploy do Apache:
cat 4541/wordpress-deploy/wordpress-deployment.yaml 
kubectl apply -f 4541/wordpress-deploy/wordpress-deployment.yaml

Veja se os Volumes Persistentes Claim, Pods, Deploy e Serviço foram criados corretamente:
kubectl get pvc
kubectl get pods,deployments,services

Visualize e aplique o arquivo ingress-wordpress.yaml para criar um Ingress ao Wordpress:
cat 4541/wordpress-deploy/ingress-wordpress.yaml 
kubectl apply -f 4541/wordpress-deploy/ingress-wordpress.yaml

Valide os comandos anteriores, listando o Ingress para o Wordpress:
kubectl get ing

Teste o acesso a aplicação do Wordpress, através do seguinte comando:
elinks http://wordpress.dexter.com.br

Para terminar o Deplot do Wordpress, remova todos os recursos através do comando:
kubectl delete -f 4541/wordpress-deploy/

Valide a remoção, listando os recursos criados no Cluster:
kubectl get secrets,pv,pvc
kubectl get deployments,services,ing
