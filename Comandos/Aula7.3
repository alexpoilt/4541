Liste todos os Pods em todos os namespaces:
kubectl get pods --all-namespaces

Em seguida, verifique qual é o IP de rede em que o nosso Cluster está configurado:
kubectl describe node node1 | grep IPv4IPIPTunnelAddr

Para testar a comunicação em rede, crie um Pod com a image Docker alpine:
kubectl run pod1 --generator=run-pod/v1 --image=alpine --restart Never -- /bin/sleep 999999

Crie um segundo Pod com a image Docker alpine:
kubectl run pod2 --generator=run-pod/v1 --image=alpine --restart Never -- /bin/sleep 999999

Liste os Pods informando em qual Node os containers estão em execução:
kubectl get pods -o wide

Confirme o IP em cada Pod, executando o comando ifconfig:
kubectl exec -it pod1 -- ifconfig eth0
kubectl exec -it pod2 -- ifconfig eth0

Teste a conectividade entre os containers, através do comando ping em cada Pod:
kubectl exec -it pod1 -- ping -c4 <IP_POD2>
kubectl exec -it pod2 -- ping -c4 <IP_POD1>

Feito os testes, remova os Pods através dos seguintes comandos:
kubectl delete pod pod1
kubectl delete pod pod2

Confirme se os Pods foram removidos:
kubectl get pods

Para começar, crie um Deploy no Cluster através do seguinte comando:
kubectl create deployment nginx --image=nginx

Liste os Pods e Deploy no Cluster, através dos seguintes comandos
kubectl get pods
kubectl get deployments

Crie um serviço do tipo NodePort para atender requisições na porta 80:
kubectl expose deployment/nginx --type="NodePort" --port 80

Liste os serviços para validar os comandos anteriores:
kubectl get services

Para exibir informações detalhadas sobre um serviço, execute o seguinte comando:
kubectl describe service nginx

Verifique em qual endereço o serviço criado enviará tráfego, listando endpoints no Cluster:
kubectl get endpoints

Para acessar a aplicação internamente, execute o comando curl nos seguintes endereços:
curl http://127.0.0.1:$NodePort
curl http://172.127.11.10:$NodePort

Para acessar a aplicação de forma externa, verifique em qual Node o Pod foi alocado:
$ kubectl get pods -o wide

Acesse a aplicação no navegador, informando o IP do Node e a porta gerada pelo serviço:
http://http://172.127.11.1x:$NodePort

Para deletar e listar um Serviço no cluster, execute os seguintes comandos:
kubectl delete service nginx
kubectl get services

Para deletar e listar um Deploy no cluster, execute os seguintes comandos:
kubectl delete deployment nginx
kubectl get deployments
